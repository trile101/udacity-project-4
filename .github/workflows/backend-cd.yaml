name: Backend Continuous Deployment

on:
  push:
    branch:
      main
  workflow_dispatch:

env:
  CLUSTER_NAME: my-cluster

jobs:
  lint-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3

      # Install dependencies
      - run: pip install pipenv
      - run: cd starter/backend && pipenv install 

      # Linting
      - run: cd starter/backend && pip install flake8 && pipenv run lint
  
  test-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3

      # Install dependencies
      - run: pip install pipenv
      - run: cd starter/backend && pipenv install

      # Testing
      - run: cd starter/backend && pipenv run test

  push-job:
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    environment: uda-dev
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1 
  
      - name: Login to Amazon ECR 
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REPOSITORY: backend-app
          IMAGE_TAG: ${{ github.sha }}
          AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
        run: |
            cd starter/backend
            docker build -t $REPOSITORY:$IMAGE_TAG .
            docker tag $REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY:$IMAGE_TAG
            docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY:$IMAGE_TAG 
    outputs:
      DOCKER_IMAGE: $REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY:$IMAGE_TAG
    
  
  deploy-job:
    needs: [push-job]
    runs-on: ubuntu-latest
    environment: uda-dev
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

        
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name ${{env.CLUSTER_NAME}}

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin

      - name: Update image with kustomize
        env:
          DOCKER_IMAGE: ${{needs.push-job.outputs.DOCKER_IMAGE}}
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=$DOCKER_IMAGE
          kustomize build | kubectl apply -f -
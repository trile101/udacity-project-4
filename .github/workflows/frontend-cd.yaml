name: Frontend Continuous Deployment

on:
  push:
    branch:
      main
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

env:
  REACT_APP_MOVIE_API_URL: http://localhost:5000


jobs: 
  lint-job:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - run: cd starter/frontend && npm ci
      - run: cd starter/frontend && npm run lint
      
  test-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: latest
      
      - run: cd starter/frontend && npm ci
      - run: cd starter/frontend && npm test
    
  push-job:
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
        
      - name: Login to Amazon ECR 
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REPOSITORY: frontend-app
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_MOVIE_API_URL: ${{ env.REACT_APP_MOVIE_API_URL }}
          AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
        run: |
            cd starter/frontend
            docker build --build-arg=$REACT_APP_MOVIE_API_URL -t $REPOSITORY:$IMAGE_TAG .
            docker tag $REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY:$IMAGE_TAG
            docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY:$IMAGE_TAG